import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from scipy import stats

# ============================ Project Title Page ================================================================================================================
print("="*70)
print("üìä COVID-19 Data Analysis & Visualization Project")
print("üéì Course: CA2 Data Analysis Project")
print("üóÇ Dataset Source: Official Government COVID Dataset")
print("="*70)

# ============================ Load and Prepare Dataset ================================================================================================================
df = pd.read_csv(r"C:\Users\paras\Downloads\COVID-19.csv")
df['Date'] = pd.to_datetime(df['Date'])
df = df.sort_values('Date')  # Sorting based on Date

# ============================ Dataset Overview ================================================================================================================
print("\nüîç Dataset Overview")
print("Shape of the matrix:", df.shape)
print("\n=== Column Names ===")
print(df.columns)
print("\n=== Data Types ===")
print(df.dtypes)
print("\n=== Missing Values ===")
print(df.isnull().sum())

# ============================ Descriptive Stats for Key Rates ===========================================================================================
print("\nüìà Descriptive Statistics")
print("\n=== Cases Rate - Total ===")
print("Mean:", df["Cases Rate - Total"].mean())
print("Median:", df["Cases Rate - Total"].median())
print("Mode:", df["Cases Rate - Total"].mode()[0])
print("Count:", df["Cases Rate - Total"].count())
print("Max:", df["Cases Rate - Total"].max())
print("Min:", df["Cases Rate - Total"].min())

print("\n=== Deaths Rate - Total ===")
print("Mean:", df["Deaths Rate - Total"].mean())
print("Median:", df["Deaths Rate - Total"].median())
print("Mode:", df["Deaths Rate - Total"].mode()[0])
print("Count:", df["Deaths Rate - Total"].count())
print("Max:", df["Deaths Rate - Total"].max())
print("Min:", df["Deaths Rate - Total"].min())

print("\n=== Hospitalizations Rate - Total ===")
print("Mean:", df["Hospitalizations Rate - Total"].mean())
print("Median:", df["Hospitalizations Rate - Total"].median())
print("Mode:", df["Hospitalizations Rate - Total"].mode()[0])
print("Count:", df["Hospitalizations Rate - Total"].count())
print("Max:", df["Hospitalizations Rate - Total"].max())
print("Min:", df["Hospitalizations Rate - Total"].min())

# ============================ Z-Test for Deaths vs Hospitalization ================================================================================================================
print("\nüìä Z-Test Between Deaths and Hospitalization Rates")
deaths_rate = df['Deaths Rate - Total']
hospitalizations_rate = df['Hospitalizations Rate - Total']
z_stat, p_value = stats.ttest_ind(deaths_rate.dropna(), hospitalizations_rate.dropna())
print(f"Z-statistic: {z_stat}, P-value: {p_value}")

# ============================ Line Plot - Trend Over Time ================================================================================================================
print("\nüìâ Plotting COVID Trends Over Time")
plt.figure(figsize=(12, 6))
plt.plot(df['Date'], df['Cases Rate - Total'], label='Cases Rate', color='blue')
plt.plot(df['Date'], df['Deaths Rate - Total'], label='Deaths Rate', color='red')
plt.plot(df['Date'], df['Hospitalizations Rate - Total'], label='Hospitalizations Rate', color='green')
plt.title('COVID-19 Daily Rolling Rates Over Time')
plt.xlabel('Date')
plt.ylabel('Rate per 100K')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
